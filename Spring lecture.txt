

1.1 
-statice web page
서버에 미리 저장된 파일이 그대로 전달되는 웹페이지
서버는 사용자가 요청에 해당하는 저장된 웹페이지를 보냄
사용자는 서버에 저장된 데이터가 변경되지 않는 한 고정된 웹페이지를 보냄

-dynamic web page
동적  웹 페이지 
서버에 있는 데이터들을 스크립트에 의해 가공처리후 생성되어 전달되는 웹페이지
서버는 사용자의 요청을 해석하여 데이터를 가공한후 생성되는 웹페이지를 보냄
사용자는 상황 시간 요청등에 따라 달라지는 웹페이지를 보게됨


1.2 
was 와 웹서버

-웹서버
클라이언트가 서버에 페이지 요청을 하면 요청을 받아 정적 컨텐츠 (html,png , css 등 ) 제공하는 서버
클라이언트에서 요청이 올떄 가장 앞에서 요청에 대한 처리를한다.
클라이언트의 요청을 기다리고 요청에 대한 데이터를 만들어서 응답하는 역할 (정적 데이터)

정적 컨텐츠를 요청했나 

1. 정적 컨텐츠이면  웹서버에서  html , png ,css 응답함
2.정적이 아니면 웹서버에서 간단 처리가 안되니 WAS 에 처리를 요청하고 처리해준 컨텐츠를 받은 웹서버는 응답을 해줌

대표 : Apache , nginx


-WAS(Web Application Server)
동적 컨텐츠를 제공하기 위해 만들어진 애플리케이션 서버(DB조회 ㅡ 로직 처리가 요구 되는 컨텐츠
JSP, Servlet 구동 환경 제공

동작 프로세스
1. 웹서버로부터 요청이 오면 컨테이너가 받아서 처리
2. 컨테이너는 web.xml 을 참조하여 해당 서블릿에 대한 쓰레드 생성하고 httpServletRequest 와 httpServletResponse 객체를 생성하여 전달한다.
3. 컨테이너는 서블릿을 호출함
4. 호출된 서블릿의 작업을 담당하게 된 쓰레드 (2번에서 만든 쓰레드)는 doPost() 또는 doGet() 을 호출 --> 이건 일반적인 servlet 호출   우리는 좀더 쉽게 사용할수 있도록 설정된 파일이 있음
5. 호출된 doPost(),doGet() 메소드는 생성된 동적 페이지를 Response객체에 담아 컨테이너에 전달함
6. 컨테이너는 전달받은 Response객체를 HTTPResponse 형태로 바꿔 웹서버에 전달하고 생성되었던 쓰레드를 종료하고 httpServletRequest 와 httpServletResponse 객체를 소멸한다.
대표: tomcat, jeus ,jBoss

-WAS와 웹서버의 차이
동적 컨첸트를 수행가능한가 아닌가
WAS 정적 동적 처리 둘다 가능하지만 정적처리를 WAS가 하게되면 부하가 많이 걸려서 좋지 않음

톰캣(WAS)에는 아파치 (웹서버)의 기능(웹서비스 데몬 ,httpd ) 를 포함하고 있음
일반적인 WAS ,Web Server 를 따로 두고 쓰는이유는 성능떄문만은 아니라는거 같음
톰캣5.5 이상부터는 httpd의 native모듈을 사용해서 정적파일을 처리하는 기능을 제공하는데 이것이 순수 아파치 Httpd만 사용하는 것과 비교해서 성능이 전혀 떨어지지 않기 때문이다.

톰캣앞에 아파치를 두는 이유는 하나의 서버에서 php애플리케이션과 java애플리케이션을 함께 사용하거나, httpd 서버를 간단한 로드밸런싱을 위해서 사용해야 할 때 필요하기 때문.

-로드밸런싱
부하 분산을 위해서 가상 IP를 통해 여러 서버에 접속하도록 분배하는 기능을 말함
하나의 인터넷 서비스가 발생하는 트래픽이 많을떄 여러대의 서버가 분산처리하여 서버의 로드율 증가 부하량 ,속도 저하등을 고려하여 적절히 분산처리하여 해결해주는 서비스


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2.1 실습 
2-1-1 enc   - utf8
2-1-2

우리는 기본적으로 가공처리한후 데이터를 전달하기위해 동적 프로젝트 ,   jsp 를 사용하기 위해  
jsp = html + java 라고 생각하면 편함(정의는 이게 아니지만)

new - dynamic web project 

프로젝트 우클릭 - build path  자바 경로를 맞춰줘야됨

WebContent 밑에 a.jsp 파일생성
오류가 뜨는데 이것은 jsp 를 구동하려면 WAS 를 추가 해줘야됨 
톰캣사이트 들어가서 WAS 다운 받고 추가하면 됨
오류 안사라지면 project facet runtime 지정


servers 폴더가 생성되면 server.xml을 켜고 
밑에 Context  path="/프로젝트명" 이렇게 되어있는데 이것을 path="/" 로 바꿈

주소창의 url 경로 떄문이기도하고 나중에 설정을 자세히 보다보면 알수 있음
그리고 나중에 프로젝트 진행할시에는 jsp 파일들은 WEB-INF 밑으로  이것도 교수님이 주신 스프링 파일에 다 설정이 되어있음 prefix  suffix 


a.jsp 가 만들어지고
톰캣 실행후 
localhost:8080/a.jsp 화면이 나오면
 html +java 설명   + git hub 설명
---------------------------------------------------------------------------------------------------------------------------------------------------
jsp 기본 문법 설명
<% %>  - 스크립트릿 이 안에 자바코드를 쓸수 있음

<%= %>  - 익스프레션  자바식 출력

<%@ %> - 지시자, 웹 컨테이너가 jsp 페이지를 처리할떄 필요한 정보를 기술
예)
①<%@ page  어트리뷰트목록  %> -jsp 전체에 적용되는 정보를 기술함
<%@ page  contentType = "text/html; charset = euc-kr"  %>
<%@ page  import = "java.util.*" %>

②<%@ include  어트리뷰트목록 %> -다른페이지를 불러다 현재 jsp 페이지의 일부로 만들기 위해 사용 , 현재 jsp 기준으로 경로설정해야됨
 <%@ include  file = "Today.jsp" %>

③<%@ taglib  어트리뷰트목록  %>  - 액션을 사용할떄 이용
<%@ taglib  prefix = "c" uri = http://java.sun.com/jsp/jstl/core %>

<%! %> - 선언부 변수선언이나 메서드를 선언
그외 jstl, el 다양한것들이 있음
html 주석 
<!-- 주석 내용 -->
jsp 주석
<%-- 주석 내용 --%>

jsp 내장 객체 
request
response
out
application
config
pageContext
session
page
exception
-----------------------------------------------------------------------------------------------------------------------------------------------------------
lecture1  을 보면됨
1번
a.jsp  - jsp 자바문법 어떻게 사용하는지?

2번 get post
get.jsp 와 requestGet.jsp 
post.jsp 와 requestPost.jsp

3번 forward redirect
forward.jsp  / redirect.jsp 
result.jsp

2019-02-26 ---- 내일은  include 동적 / 정적 
----------------------------------------------------------------------------------------------------------------------------------------------------
